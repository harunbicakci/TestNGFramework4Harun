<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-07T21:13:12 EST" name="Regression Suite" finished-at="2023-02-07T21:14:09 EST" duration-ms="56211">
    <groups>
      <group name="regression">
        <method signature="LoginTest.emptyPasswordLogin()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" name="emptyPasswordLogin" class="com.neotech.testcases.LoginTest"/>
        <method signature="LoginTest.invalidPasswordLogin()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" name="invalidPasswordLogin" class="com.neotech.testcases.LoginTest"/>
        <method signature="LoginTest.validLogin()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" name="validLogin" class="com.neotech.testcases.LoginTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="LoginTest.validLogin()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" name="validLogin" class="com.neotech.testcases.LoginTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-02-07T21:13:12 EST" name="Regression Test" finished-at="2023-02-07T21:14:09 EST" duration-ms="56211">
      <class name="com.neotech.testcases.LoginTest">
        <test-method is-config="true" signature="generateReport()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:13:12 EST" name="generateReport" finished-at="2023-02-07T21:13:13 EST" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:13:13 EST" name="setUp" finished-at="2023-02-07T21:13:24 EST" duration-ms="11207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="emptyPasswordLogin()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:13:24 EST" name="emptyPasswordLogin" finished-at="2023-02-07T21:13:27 EST" duration-ms="3062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyPasswordLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:13:27 EST" name="tearDown" finished-at="2023-02-07T21:13:27 EST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:13:27 EST" name="setUp" finished-at="2023-02-07T21:13:35 EST" duration-ms="7273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidPasswordLogin()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:13:35 EST" name="invalidPasswordLogin" finished-at="2023-02-07T21:13:41 EST" duration-ms="6659" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message does NOT match! expected [Invalid Credentials - zzz] but found [Invalid Credentials]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message does NOT match! expected [Invalid Credentials - zzz] but found [Invalid Credentials]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.neotech.testcases.LoginTest.invalidPasswordLogin(LoginTest.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPasswordLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:13:42 EST" name="tearDown" finished-at="2023-02-07T21:13:42 EST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:13:42 EST" name="setUp" finished-at="2023-02-07T21:13:49 EST" duration-ms="7503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validLogin()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:13:49 EST" name="validLogin" finished-at="2023-02-07T21:14:08 EST" duration-ms="18287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:14:08 EST" name="tearDown" finished-at="2023-02-07T21:14:08 EST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="writeReport()[pri:0, instance:com.neotech.testcases.LoginTest@350aac89]" started-at="2023-02-07T21:14:08 EST" name="writeReport" finished-at="2023-02-07T21:14:09 EST" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReport -->
      </class> <!-- com.neotech.testcases.LoginTest -->
    </test> <!-- Regression Test -->
  </suite> <!-- Regression Suite -->
</testng-results>
